using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using static System.Console;

namespace Assignment_2___IFN556
{
    internal class Program
    {
        static void Main(string[] args)
        {
            DisplayIntroduction();
            
            int a = InputValue(0, 31);
            
            Product[] products = new Product[a];

            GetProductData(products);

            DisplayAllProducts(products);

            GetProductLists(products);
        }

        public static void DisplayIntroduction()
        {
            Console.WriteLine("*********************************************************************************\n" +
                              "*Project Introduction: Program allow users to enter and store product details.  *\n" +
                              "*Student Name: Le Khanh Linh Pham                                               *\n" +
                              "*Student ID: n10364960                                                          *\n" +
                              "*********************************************************************************");
        }
        public static int InputValue(int min, int max)
        {
            int entry = 0;
            int x = 0;
            // check in range
            while (x < 1)
            {
                WriteLine("Please enter an integer in the range of 1 and 30 >>>");
                if (int.TryParse(ReadLine(), out entry))
                {
                    if (entry > min && entry < max)
                    {
                        x++;
                    }
                }
                else
                {
                    WriteLine("Invalid entry - try again >> ");
                }
            }
            return entry;
        }

        public static bool CheckString(string id)
        {
            bool ValidID = false;

            if (id.Length == 4)
            {
                char char1 = Convert.ToChar(id.Substring(0, 1));
                string char2 = id.Substring(1, 1);
                int char3 = Convert.ToInt32(id.Substring(2, 1));
                int char4 = Convert.ToInt32(id.Substring(3, 1));

                if (char1 >= 'a' && char1 <= 'z' && char2 == "-" && char3 >= 0 && char3 < 10 && char4 >= 0 && char4 < 10)
                {
                    ValidID = true;
                }
            }
          
            return ValidID;
        }

        private static void GetProductData(Product[] products)
        {
            string entryID;
            string entryName;
            int x = 0;

            while (x < products.Length)
            {
                string productID = "";
                string productName = "";
                int productQuantity = 0;
                double productPrice = 0;

                WriteLine("     Product category codes:\n" +
                    "a-       Apparel\n" +
                    "b-       Books\n" +
                    "f-       Foods\n" +
                    "t-       Toys\n" +
                    "o-       Others");

                bool IsValid = false;


                while (IsValid == false)
                {
                    WriteLine("Enter Product ID (start with category code and end with a 2-digit number >>>");
                    entryID = ReadLine();

                    if (CheckString(entryID))
                    {
                        productID = entryID;
                        IsValid = true;
                    }
                    if (!CheckString(entryID))
                    {
                        WriteLine("Invalid ID. Please try again >>> ");
                    }
                }

                WriteLine("Enter Product name >>> ");
                entryName = ReadLine();
                productName = entryName;

                IsValid = false;
                while (!IsValid)
                {
                    WriteLine("Enter Product Quantity >>> ");
                    if (int.TryParse(ReadLine(), out productQuantity))
                        IsValid = true;
                    else
                        WriteLine("Invalid value. Please try again >>> ");
                }

                IsValid = false;
                while (!IsValid)
                {
                    WriteLine("Enter Product Price >>> ");
                    if (double.TryParse(ReadLine(), out productPrice))
                        IsValid = true;
                    else
                        WriteLine("Invalid value. Please try again >>> ");
                }

                Product t = new Product(productID, productName, productQuantity, productPrice);
                products[x] = t;

                x++;
            }

        }

        public static void DisplayAllProducts(Product[] products)
        {
            WriteLine("Information of all products:\n" +
               "ProductID      ProductCategoryName      ProductName      ProductQuantity      ProductPrice");

            int y = 0;
            while (y < products.Length)
            {
                WriteLine("{0}", products[y].ToString());
                y++;
            }
        }

        private static void GetProductLists(Product[] products)
        {
            string entry = "";
            string entrycode = "";

            const string QUIT = "Z";

            WriteLine("Enter a product category code to see the list of product in the category\n" +
                "   Product category codes are:\n" +
                "a-       Apparel\n" +
                "b-       Books\n" +
                "f-       Foods\n" +
                "t-       Toys\n" +
                "o-       Others");

            WriteLine("Enter an category code or Z to quit >>>");
            entry = ReadLine();

            while (entry != QUIT)
            {
                if ((CheckString(entry)))
                {
                    int count = 0;
                    string cat = "";

                    entrycode = entry;

                    for (int i = 0; i < products.Length; i++)
                    {
                        if (entrycode == products[i].productID)
                        {
                            WriteLine("{0}", products[i].ToString());
                            count++;
                            cat = Product.Category[i];
                        }
                    }
                    WriteLine("Number of products in the category {0}: {1}", cat, count);
                }

                if ((!CheckString(entry)))
                {
                    WriteLine("Invalid ID. Please try again >>> ");
                }


                WriteLine("Enter an category code or Z to quit >>>");
                entry = ReadLine();
            }
            if (entry == QUIT)
            {
                WriteLine("Thank you for using our Program.");
            }   
        }
    }
    class Product
    {
        public static string[] Codes = { "a-", "b-", "f-", "t-", "o-" };
        public static string[] Category = { "Apparel", "Books", "Foods", "Toys", "Others" };

        //data fields
        public string productID;
        public string productCategoryName;

        //properties
        public string ProductName
        { get; set; }

        public int ProductQuantity
        { get; set; }
        public double ProductPrice
        { get; set; }

        public string ProductID
        {
            get
            {
                return productID;
            }
            set
            {
                productID = value;
                bool ValidCodes = false;
                int x = 0;
                while (x < Codes.Length)
                {
                    if (productID.Substring(0, 2) == Codes[x])
                    {
                        ValidCodes = true;
                        productCategoryName = Category[x];
                    }
                    x++;
                }

                if (!ValidCodes)
                {
                    productID = "o-" + productID.Substring(2, 2);
                }
            }
        }

        public string ProductCategoryName
        { get { return productCategoryName; } }

        //Constructors
        public Product()
        { }
        public Product(string productIDa, string productName, int productQuantity, double productPrice)
        {
            ProductID = productIDa;
            ProductName = productName;
            ProductQuantity = productQuantity;
            ProductPrice = productPrice;
        }

        //method
        public override string ToString()
        {
            return ProductID + "         " + ProductCategoryName + "         " +
                ProductName + "            " + ProductQuantity + "         " + ProductPrice.ToString("C");
        }
    }
}
